var cache = {};
// var calls = {};

//fun __fib(n, a, b) {
//    if (n == 0) {
//        return a;
//    }
//
//    if (n == 1) {
//        return b;
//    }
//
//    return __fib(n - 1, b, a + b);
//}

// fun fib(n) {
//     if (n <= 1) {
//         return n;
//     } else {
//         return fib(n - 2) + fib(n - 1);
//     }
// }

fun fib(n) {
    if (n < 2) {
        return n;
    }

    if (n not in cache) {
        cache[n] = fib(n - 2) + fib(n - 1);
    }

    return cache[n];
}

print "running naive fibonacci sequence";

var start = time();

print fib(30);

print "finished in " + (time() - start) + " seconds";
